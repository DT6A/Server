# Generated by Django 3.1.7 on 2021-06-07 20:09

import datetime
from django.conf import settings
import django.core.management.utils
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Metric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CharCountingMetric',
            fields=[
                ('metric_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.metric')),
                ('char', models.CharField(max_length=1, unique=True)),
            ],
            bases=('users.metric',),
        ),
        migrations.CreateModel(
            name='SubstringCountingMetric',
            fields=[
                ('metric_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.metric')),
                ('substring', models.CharField(max_length=100, unique=True)),
            ],
            bases=('users.metric',),
        ),
        migrations.CreateModel(
            name='UserUniqueToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(default=django.core.management.utils.get_random_secret_key, max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserStat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metrics', models.JSONField(default=dict)),
                ('time_from', models.DateTimeField(default=datetime.datetime(2021, 6, 7, 20, 9, 47, 750095, tzinfo=utc))),
                ('time_to', models.DateTimeField(default=datetime.datetime(2021, 6, 7, 20, 9, 47, 750126, tzinfo=utc))),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('invite_key', models.CharField(default=django.core.management.utils.get_random_secret_key, max_length=100)),
                ('admins', models.ManyToManyField(related_name='team_admin', to=settings.AUTH_USER_MODEL)),
                ('tracked_metrics', models.ManyToManyField(blank=True, related_name='metrics', to='users.Metric')),
                ('users', models.ManyToManyField(blank=True, related_name='team_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('metric_to_goal', models.JSONField(default=dict)),
                ('assigned_users', models.ManyToManyField(blank=True, related_name='unfinished_achievements', to=settings.AUTH_USER_MODEL)),
                ('completed_users', models.ManyToManyField(blank=True, related_name='finished_achievements', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
